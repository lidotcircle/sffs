name: Test
on:
  push:
    branches:
      - master
    tags:
      - v[0-9]+.[0-9]

jobs:
  BuildAndTestUbuntu:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: release name
        id: release
        run: |
          branch=$(echo ${{github.ref}} | sed 's/refs\/\(heads\|tags\)\///g') && \
            release=$([[ "$branch" =~ v[0-9.]+ ]] && echo $branch || echo $branch) && \
            echo "release_name=$release" && \
            printf "::set-output name=release::%s\n" "$release"

      - name: install packages
        run: sudo apt-get install -y cmake valgrind

      - name: install clang
        run: |
          wget https://apt.llvm.org/llvm.sh && \
            chmod +x llvm.sh && \
            sudo ./llvm.sh 15 && \
            sudo apt install clang-tidy && \
            echo "clang-15: $(which clang-15), clang-tidy: $(which clang-tidy-15)" 

      - name: Release Build
        run: |
          export CC=$(which clang-15) && export CXX=$(which clang++-15) && \
          mkdir build && cd build && cmake .. -DCMAKE_BUILD_TYPE=Release -DCXX_VERSION=17 && make

      - name: run clang-tidy
        run: if (clang-tidy-15 -p build include/ 2>/dev/null  | grep -e 'warning'); then  false; else true; fi

      - name: Release Test
        run: cd build/test && ctest

      - name: Memory Leak Detection
        run: cd build/test && for f in $(ls | grep '^test[^.]*$'); do echo "$f" &&  eval "valgrind ./$f" || exit 1; done

      - name: CXX20 Build
        run: |
          export CC=$(which clang-15) && export CXX=$(which clang++-15) && \
          mkdir build_cxx20 && cd build_cxx20 && cmake .. -DCMAKE_BUILD_TYPE=Debug -DCXX_VERSION=20 && make

      - name: Debug Build
        run: |
          export CC=$(which clang-15) && export CXX=$(which clang++-15) && \
          mkdir build_cxx17_debug && cd build_cxx17_debug && cmake .. -DCMAKE_BUILD_TYPE=Debug -DCXX_VERSION=17 && make

      - name: Debug Test
        run: cd build_cxx17_debug/test && ctest

  BuildAndTestWindows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive

      - uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: amd64

      - name: Release Build
        run: |
          mkdir build
          cd build
          cmake -DCMAKE_BUILD_TYPE=Release -DCXX_VERSION=17 -G "NMake Makefiles" ..
          nmake

      - name: CXX20 Build
        run: |
          mkdir build_cxx20
          cd build_cxx20
          cmake -DCMAKE_BUILD_TYPE=Debug -DCXX_VERSION=20 -G "NMake Makefiles" ..
          nmake

      - name: Release Test
        run: cd build/test && ctest

      - name: Debug Build
        run: |
          mkdir build_debug
          cd build_debug
          cmake -DCMAKE_BUILD_TYPE=Debug -DCXX_VERSION=17 -G "NMake Makefiles" ..
          nmake

      - name: Debug Test
        run: cd build_debug/test && ctest
