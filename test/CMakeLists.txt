enable_testing()
file(GLOB TEST_FILES_CPP "${CMAKE_CURRENT_LIST_DIR}/*.cpp")
file(GLOB TEST_FILES_CX "${CMAKE_CURRENT_LIST_DIR}/*.cx")
file(GLOB TEST_FILES "${CMAKE_CURRENT_LIST_DIR}/*.c")
list(APPEND TEST_FILES ${TEST_FILES_CPP} ${TEST_FILES_CX})
foreach(test_file IN LISTS TEST_FILES)
  get_filename_component(filenamewe ${test_file} NAME_WE)
  string(CONCAT execname "test_" ${filenamewe})
  add_executable(${execname} ${test_file})
  if(CMAKE_BUILD_TYPE STREQUAL "DEBUG" OR CMAKE_BUILD_TYPE STREQUAL "Debug")
    if(CMAKE_CXX_COMPILER_ID STREQUAL "Clang")
      target_compile_options(${execname} PRIVATE -fprofile-instr-generate
                                                 -fcoverage-mapping)
      target_link_libraries(${execname} PRIVATE -fprofile-instr-generate
                                                -fcoverage-mapping)
    elseif(CMAKE_CXX_COMPILER_ID STREQUAL "GNU")
      target_compile_options(${execname} PRIVATE -fprofile-arcs -ftest-coverage)
      target_link_libraries(${execname} PRIVATE -fprofile-arcs -ftest-coverage)
    endif()
    if(NOT CMAKE_CXX_COMPILER_ID STREQUAL "MSVC")
      target_compile_options(${execname} PRIVATE -fsanitize=address
                                                 -fsanitize=undefined)
      if(CMAKE_CXX_COMPILER_ID STREQUAL "Clang" OR CMAKE_CXX_COMPILER_ID
                                                   STREQUAL "AppleClang")
        target_link_libraries(${execname} PRIVATE -fsanitize=address)
      else()
        target_link_libraries(${execname} PRIVATE -lasan -lubsan)
      endif()
    endif()
  endif()
  set_property(TARGET ${execname} PROPERTY CXX_STANDARD 20)
  target_link_libraries(${execname} PRIVATE utest sffs)
  add_test(NAME ${execname} COMMAND ${execname})
endforeach()
